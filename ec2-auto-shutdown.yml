---
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This Cloudformation template creates resources to Schedule Auto Stop of EC2 instances to save cost.

Parameters:
  AutoStopEC2Schedule:
    Default: cron(0 17 ? * MON-FRI *)
    Description: Auto Stop EC2 Instance (Mon-Fri 5:00 PM UTC / 6:00 PM CET)
    Type: String
    MinLength: 20
    MaxLength: 30
  RegionTZ:
    Default: UTC
    Type: String
    AllowedValues:
      - UTC
      - US/Eastern
      - US/Pacific
      - Asia/Kolkata
      - Europe/Berlin
      - Europe/Dublin
      - Europe/London
      - Europe/Rome
      - Europe/Paris
      - Europe/Stockholm
    Description: Select Timezone of your Region for execution time

Resources:
  LambdaEC2Role:
    Type: AWS::IAM::Role
    Properties:
      Description: IAM Role for Lambda to Stop EC2 instances
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LambdaEC2StopPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                - ec2:StopInstances
                Resource: arn:aws:ec2:*:*:instance/*
              - Effect: Allow
                Action:
                - ec2:DescribeInstances
                - ec2:DescribeTags
                - ec2:DescribeInstanceStatus
                Resource: '*'

  AutoStopEC2Lambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: AutoStopEC2Instance
      Runtime: python3.12
      MemorySize: 128
      Role: !GetAtt
        - LambdaEC2Role
        - Arn
      Handler: index.lambda_handler
      Timeout: 60
      Code:
        ZipFile: |
            import boto3
            import logging
            import os
            import re

            logger = logging.getLogger()
            logger.setLevel(logging.INFO)

            region = os.environ['AWS_REGION']
            ec2 = boto3.resource('ec2', region_name=region)

            def lambda_handler(event, context):

                filters = [
                {
                    'Name': 'instance-state-name',
                    'Values': ['running']
                }
                ]

                instances = list(ec2.instances.filter(Filters=filters))
                if instances:
                    print("Instances below are in RUNNING state:")
                    for instance in instances:
                        print("Instance ID:", instance.id)
                        for tag in instance.tags:
                            if 'Name' in tag['Key']:
                                print(f"Instance Name: {tag['Value']}")
                    for instance in instances:
                        tags = {tag['Key']: tag['Value'] for tag in instance.tags}
                        if not any(re.search(r'\b\w*exception\w*\b', value, re.IGNORECASE) for value in tags.values()):
                            print("Stopping below instance ----> doesn't have 'Exception' in Tags")
                            print("Instance ID:", instance.id)
                            for tag in instance.tags:
                                if 'Name' in tag['Key']:
                                    print(f"Instance Name: {tag['Value']}")
                            instance.stop()
                        else:
                            print("Instance below has 'Exception' in Tags ----> Skipping Stop")
                            print("Instance ID:", instance.id)
                            for tag in instance.tags:
                                if 'Name' in tag['Key']:
                                    print(f"Instance Name: {tag['Value']}")
                else:
                    print("No instance in RUNNING state ----> Skipping Stop")

      Description: >-
        Auto Stop EC2 Instance (from tag : Exception)

  AutoStopEC2Rule:
    Type: AWS::Events::Rule
    Properties:
      Name : AutoStopEC2Rule
      Description: Auto Stop EC2 Instance (Mon-Fri 5:00 PM UTC / 6:00 PM CET)
      ScheduleExpression: !Ref AutoStopEC2Schedule
      State: ENABLED
      Targets:
        -
          Arn: !GetAtt AutoStopEC2Lambda.Arn
          Id: AutoStopEC2Lambda

  AutoStopEC2LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt AutoStopEC2Lambda.Arn
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn : !GetAtt AutoStopEC2Rule.Arn

Outputs:
  RegionTZOutput:
    Description: AWS Region Timezone
    Value: !Ref RegionTZ

  AWSRegionOutput:
    Description: AWS Region
    Value: !Ref AWS::Region